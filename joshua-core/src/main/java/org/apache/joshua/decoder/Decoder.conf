# This default Joshua config file is written in TypesafeConfig syntax
# [https://github.com/typesafehub/config] and is parsed at
# initialization time as the default configuration.
# It may be overriden by any other given Joshua config file and/or
# commandline overrides.

# Joshua supported search algorithms: "cky" or "stack"
search_algorithm = cky

# default grammar symbols. The symbols here should be enclosed in square brackets.
default_non_terminal = "[X]"
goal_symbol = "[GOAL]"

# whether to construct a StructuredTranslation object for each request instead of
# printing to stdout. Used when the Decoder is used from Java directly.
use_structured_output = false

# If set to true, Joshua will recapitalize the output by projecting the case from aligned source-side words
project_case = false

output_format = "%i ||| %s ||| %f ||| %c"

# When true, _OOV is appended to all words that are passed through (useful for something like
# transliteration on the target side
mark_oovs = false

# n-best configuration
# Make sure output strings in the n-best list are unique.
use_unique_nbest = true
# Include the phrasal alignments in the output.
include_align_index = false
# The number of hypotheses to output by default.
top_n = 1
# Write n-best output to this file
n_best_file = ""

# The cube pruning pop limit. Set to 0 for exhaustive pruning.
pop_limit = 100

# Maximum sentence length. Sentences longer than this are truncated.
maximum_sentence_length = 200

# The number of target sides considered for each source side (after sorting by model weight)
num_translation_options = 20

# The distortion limit
reordering_limit = 8

# If set to true, Joshua will lowercase the input, creating an annotation that marks the original case
lowercase = false

# Whether to segment OOVs into a lattice
segment_oovs = false

# Enable lattice decoding.
lattice_decoding = false

# If false, sorting of the complete grammar is done at load time. If true, grammar tries are not
# sorted till they are first accessed. Amortized sorting means you get your first translation
# much, much quicker (good for debugging), but that per-sentence decoding is a bit slower.
amortized_sorting = true

# syntax-constrained decoding
constrain_parse = false

use_pos_labels = false

# oov-specific
true_oovs_only = false

# Dynamic sentence-level filtering.
filter_grammar = false

# The number of decoding threads to use (-threads).
num_parallel_decoders = 1

# Enables synchronous parsing.
parse = false
  
# Whether to do forest rescoring. If set to true, the references are expected on STDIN along with
# the input sentences in the following format: 
# input sentence ||| ||| reference1 ||| reference2 ... 
# (The second field is reserved for the output sentence for alignment and forced decoding).
rescore_forest = false
rescore_forest_weight = 10.0f


# If true, decode using a dot chart (standard CKY+); if false, use the much more efficient
# version of Sennrich (SSST 2014)
use_dot_chart = true

# moses compatibility
moses = false

# Read input from a file (Moses compatible flag)
input_file = ""

# Timeout in seconds for threads
translation_thread_timeout = 30_000

# grammars are a list of sub configs for each grammar
grammars = []

# the list of feature functions with their configurations
feature_functions = []

# an external weights file to be specified
weights_file = ""

# The decoder weights directly specified as key-value pairs. These take precedence over weights in weights_file
weights = {}

serverSettings = {	

	# Input typr: plain or json
	input_type = plain

	# Type of server: none, TCP, HTTP
	server_type = none

	# If set, Joshua will start a (multi-threaded) TCP/IP server on this port.
	server_port = 0
}

# the default size of the cache used by packed grammars
default_packed_grammar_cache_size = 5000